{"version":3,"file":"static/js/506.9b1c2e6f.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Loader/Loader.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport const FormStyled = styled(Form)`\n  margin: 0 auto;\n  padding: 10px;\n  width: 600px;\n  font-weight: 500;\n`;\n\nexport const ContactFormTitle = styled.h2`\n  font-size: 30px;\n  text-align: center;\n  font-weight: 700;\n  margin-bottom: 15px;\n`;\n\nexport const ButtonAdd = styled(Button)`\n  display: block;\n  width: 120px;\n  padding: 8px;\n  margin: 0 auto;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectFilterValue = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  ({ items }, filterValue) => {\n    const normalizedFilter = filterValue.toLowerCase();\n    const filterContacts = items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n    return filterContacts;\n  }\n);\n\n","import { FormStyled, ContactFormTitle, ButtonAdd } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport Form from 'react-bootstrap/Form';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\n\nexport const ContactForm = () => {\n  const { items } = useSelector(selectContacts);\n  const [validated, setValidated] = useState(false);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    let isName = false;\n\n    if (name === '' || number === '') {\n      toast.error('Please, fill in all fields');\n      return;\n    }\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    setValidated(true);\n    if (items && items.length > 0) {\n      items.forEach(({ name: existedName }) => {\n        if (name.toLowerCase() === existedName.toLowerCase()) {\n          toast.error(`${name} is already in contacts`);\n          isName = true;\n        }\n      });\n    }\n\n    if (!isName) {\n      dispatch(addContact({ name, number }));\n      setName('');\n      setNumber('');\n      setValidated(false);\n    }\n  };\n\n  return (\n    <FormStyled noValidate onSubmit={handleSubmit} validated={validated}>\n      <ContactFormTitle>Add contact</ContactFormTitle>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\n        <FloatingLabel controlId=\"floatingName\" label=\"Name\" className=\"mb-3\">\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            onChange={handleChange}\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          />\n        </FloatingLabel>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupNumber\">\n        <FloatingLabel\n          controlId=\"floatingInput\"\n          label=\"Number\"\n          className=\"mb-3\"\n        >\n          <Form.Control\n            required\n            type=\"tel\"\n            placeholder=\"Enter number\"\n            onChange={handleChange}\n            name=\"number\"\n            value={number}\n          />\n        </FloatingLabel>\n      </Form.Group>\n      <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n    </FormStyled>\n  );\n};\n","import styled from 'styled-components';\n\n\nexport const ContactInfo = styled.p`\n    margin: 0;\n`\n\nexport const ButtonContactStyled = styled.button`\n  display: inline-block;\n  padding: 10px 20px;\n  border: none;\n  text-align: center;\n  cursor: pointer;\n  background-color: #07bad2;\n  border-radius: 5px;\n\n  :hover {\n    background-color: #1371d6;\n  }\n`;","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { ButtonContactStyled, ContactInfo } from './ContactItem.styled';\n\nexport const ContactItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <ContactInfo>\n        {name}: {number}\n      </ContactInfo>\n      <ButtonContactStyled\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </ButtonContactStyled>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const ContactListStyled = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n`;\n\nexport const ContactListItemStyled = styled.li`\n  border: 1px solid;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 15px;\n  width: 300px;\n`;\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { ContactListStyled, ContactListItemStyled } from './ContactList.styled';\nimport { selectVisibleContacts } from 'redux/contacts/contacts-selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactListStyled>\n      {contacts.map(contact => (\n        <ContactListItemStyled key={contact.id}>\n          <ContactItem contact={contact} />\n        </ContactListItemStyled>\n      ))}\n    </ContactListStyled>\n  );\n};\n\n//\n","import styled from 'styled-components';\n\nexport const FilterStyled = styled.input`\n  outline: none;\n  padding: 8px;\n  border-radius: 5px;\n  width: 200px;\n`;\n\nexport const LabelFilter = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: center;\n  margin-bottom: 15px;\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/itemsSlice/filterSlice.js';\nimport { selectFilterValue } from 'redux/contacts/contacts-selectors.js';\nimport { FilterStyled, LabelFilter } from './Filter.styled.js';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilterValue);\n  return (\n    <>\n      <LabelFilter>\n        Find contacts by name\n        <FilterStyled\n          type=\"text\"\n          value={filterValue}\n          onChange={e => dispatch(filterContacts(e.currentTarget.value))}\n        />\n      </LabelFilter>\n    </>\n  );\n};\n","import { BallTriangle } from 'react-loader-spinner';\nimport { Box } from 'components/Box/Box';\n\nexport const Loader = () => {\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <BallTriangle\n        height={100}\n        width={100}\n        radius={5}\n        color=\"#07bad2\"\n        ariaLabel=\"ball-triangle-loading\"\n        visible={true}\n      />\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SectionContacts = styled.section`\n  padding: 30px 0;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { useEffect } from 'react';\nimport { SectionContacts } from './Contacts.styled';\n\nconst Contacts = () => {\n  const { items, isLoading, error } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <SectionContacts>\n      <h2>Contacts</h2>\n      <ContactForm />\n      <Filter />\n      {isLoading && <Loader />}\n      {error && <div>Sorry, something went wrong :( Please try again</div>}\n      {items.length > 0 ? (\n        <ContactList />\n      ) : (\n        <div>You haven't any contacts yet</div>\n      )}\n    </SectionContacts>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormStyled","styled","Form","ContactFormTitle","ButtonAdd","Button","selectContacts","state","contacts","selectFilterValue","filter","selectVisibleContacts","createSelector","filterValue","items","normalizedFilter","toLowerCase","name","includes","ContactForm","useSelector","useState","validated","setValidated","setName","number","setNumber","dispatch","useDispatch","handleChange","target","value","noValidate","onSubmit","e","preventDefault","form","currentTarget","isName","checkValidity","stopPropagation","length","forEach","existedName","toast","addContact","className","controlId","FloatingLabel","label","required","type","placeholder","onChange","pattern","ContactInfo","ButtonContactStyled","ContactItem","contact","id","onClick","deleteContact","ContactListStyled","ContactListItemStyled","ContactList","map","FilterStyled","LabelFilter","Filter","filterContacts","Loader","Box","display","justifyContent","height","width","radius","color","ariaLabel","visible","SectionContacts","isLoading","error","useEffect","fetchContacts"],"sourceRoot":""}