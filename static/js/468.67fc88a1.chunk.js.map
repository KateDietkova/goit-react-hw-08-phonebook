{"version":3,"file":"static/js/468.67fc88a1.chunk.js","mappings":"mRAIaA,EAAgBC,EAAAA,GAAAA,GAAH,wFAMbC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,EAAPF,CAAH,mGAOVG,EAAoBH,EAAAA,GAAAA,IAAH,yFAMjBI,GAAiBJ,EAAAA,EAAAA,IAAOK,EAAAA,EAAPL,CAAH,gGAOdM,GAAeN,EAAAA,EAAAA,IAAOK,EAAAA,EAAPL,CAAH,yC,SClBZO,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAgCN,EAAAA,EAAAA,UAAS,IAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KACA,GAAwBR,EAAAA,EAAAA,WAAS,GAAjC,eAAOS,EAAP,KAAaC,EAAb,KAIMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUT,EAAoB,EAApBA,KAAMU,EAAc,EAAdA,MACtC,OAAQV,GACN,IAAK,OACH,OAAOC,EAAQS,GACjB,IAAK,QACH,OAAOP,EAASO,GAClB,IAAK,WACH,OAAOL,EAAYK,GACrB,QACE,OAEL,EAkBD,OACE,UAACtB,EAAD,CAAYuB,YAAU,EAACC,SAjBJ,SAAAC,GACnBA,EAAEC,kBAE2B,IADhBD,EAAEE,cACNC,kBACPH,EAAEC,iBACFD,EAAEI,mBAGJlB,GAAa,GAEbJ,GAASuB,EAAAA,EAAAA,IAAS,CAAElB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCe,QAAQC,IAAI,CAAEpB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IAC3BH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAEgDP,UAAWA,EAA1D,WACE,SAACZ,EAAD,iCACA,UAACG,EAAA,QAAD,CAAYgC,UAAU,OAAOC,UAAU,gBAAvC,WACE,SAACjC,EAAA,QAAD,oBACA,SAACA,EAAA,UAAD,CACEkC,UAAQ,EACRC,KAAK,OACLC,YAAY,kBACZC,SAAUlB,EACVR,KAAK,aAGT,UAACX,EAAA,QAAD,CAAYgC,UAAU,OAAOC,UAAU,iBAAvC,WACE,SAACjC,EAAA,QAAD,6BACA,SAACA,EAAA,UAAD,CACEkC,UAAQ,EACRC,KAAK,QACLC,YAAY,cACZC,SAAUlB,EACVR,KAAK,cAGT,UAACX,EAAA,QAAD,CAAYgC,UAAU,OAAOC,UAAU,oBAAvC,WACE,SAACjC,EAAA,QAAD,wBACA,UAACC,EAAD,YACE,SAACD,EAAA,UAAD,CACEkC,UAAQ,EACRC,KAAMlB,EAAO,OAAS,WACtBmB,YAAY,iBACZC,SAAUlB,EACVR,KAAK,cAEP,SAACT,EAAD,CAAgBoC,QAAQ,QAAQC,EAAE,UAAUC,QAhEhC,kBAAMtB,GAASD,EAAf,EAgEZ,SACGA,EAAO,OAAS,aAGrB,SAACjB,EAAA,OAAD,CAAWyC,GAAG,oBAAoBC,OAAK,EAAvC,qJAKF,SAACtC,EAAD,CAAc+B,KAAK,SAAnB,uBAGL,EC9FYQ,EAAkB7C,EAAAA,GAAAA,QAAH,0ECU5B,EATiB,WAEf,OACE,SAAC6C,EAAD,WACE,SAACtC,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register/Register.styled.js","pages/Register/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport const RegisterTitle = styled.h1`\n  font-size: 30px;\n  text-align: center;\n  font-weight: 700;\n`;\n\nexport const FormStyled = styled(Form)`\n  margin: 0 auto;\n  padding: 10px;\n  width: 600px;\n  font-weight: 500;\n`;\n\nexport const FormGroupPassword = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n`;\n\nexport const ButtonPassword = styled(Button)`\n  width: 70px;\n  position: absolute;\n  right: 40px;\n  padding: 3px;\n`;\n\nexport const ButtonSignUp = styled(Button)`\n  width: 100px;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operations';\nimport Form from 'react-bootstrap/Form';\nimport {\n  FormStyled,\n  FormGroupPassword,\n  ButtonPassword,\n  ButtonSignUp,\n  RegisterTitle,\n} from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [validated, setValidated] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [show, setShow] = useState(false);\n\n  const handleClick = () => setShow(!show);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    setValidated(true);\n\n    dispatch(register({ name, email, password }));\n    console.log({ name, email, password });\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <FormStyled noValidate onSubmit={handleSubmit} validated={validated}>\n      <RegisterTitle>Registration form</RegisterTitle>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n          required\n          type=\"name\"\n          placeholder=\"Enter your name\"\n          onChange={handleChange}\n          name=\"name\"\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          required\n          type=\"email\"\n          placeholder=\"Enter email\"\n          onChange={handleChange}\n          name=\"email\"\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n        <Form.Label>Password</Form.Label>\n        <FormGroupPassword>\n          <Form.Control\n            required\n            type={show ? 'text' : 'password'}\n            placeholder=\"Enter password\"\n            onChange={handleChange}\n            name=\"password\"\n          />\n          <ButtonPassword variant=\"light\" h=\"1.75rem\" onClick={handleClick}>\n            {show ? 'Hide' : 'Show'}\n          </ButtonPassword>\n        </FormGroupPassword>\n        <Form.Text id=\"passwordHelpBlock\" muted>\n          Your password must be 8-20 characters long, contain letters and\n          numbers, and must not contain spaces, special characters, or emoji.\n        </Form.Text>\n      </Form.Group>\n      <ButtonSignUp type=\"submit\">Sign up</ButtonSignUp>\n    </FormStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SectionRegister = styled.section`\n  background-color: #e6eff0;\n  padding: 60px 0;\n`;\n","import { RegisterForm } from \"components/RegisterForm/RegisterForm\";\nimport { SectionRegister } from \"./Register.styled\";\n\nconst Register = () => {\n  \n  return (\n    <SectionRegister>\n      <RegisterForm/>\n    </SectionRegister>\n  );\n};\n\nexport default Register;\n"],"names":["RegisterTitle","styled","FormStyled","Form","FormGroupPassword","ButtonPassword","Button","ButtonSignUp","RegisterForm","dispatch","useDispatch","useState","validated","setValidated","name","setName","email","setEmail","password","setPassword","show","setShow","handleChange","target","value","noValidate","onSubmit","e","preventDefault","currentTarget","checkValidity","stopPropagation","register","console","log","className","controlId","required","type","placeholder","onChange","variant","h","onClick","id","muted","SectionRegister"],"sourceRoot":""}