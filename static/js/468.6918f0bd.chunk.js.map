{"version":3,"file":"static/js/468.6918f0bd.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register/Register.styled.js","pages/Register/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\n\nexport const RegisterTitle = styled.h1`\n  font-size: 30px;\n  text-align: center;\n  font-weight: 700;\n  margin-bottom: 15px;\n`;\n\nexport const FormStyled = styled(Form)`\n  margin: 0 auto;\n  padding: 10px;\n  width: 600px;\n  font-weight: 500;\n`;\n\nexport const FormGroupPassword = styled.div`\n  position: relative;\n`;\n\nexport const ButtonPassword = styled(Button)`\n  width: 40px;\n  position: absolute;\n  right: 40px;\n  bottom: 12px;\n  padding: 5px;\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .input-group &.btn {\n    position: absolute;\n    z-index: 5;\n  }\n`;\n\nexport const ButtonSignUp = styled(Button)`\n  width: 100px;\n`;\n\nexport const FloatingLabelRegister = styled(FloatingLabel)`\n  margin-bottom: 0;\n`;\n\nexport const InputPasswordRegister = styled(Form.Control)`\n  border-bottom-right-radius: 6px;\n  border-top-right-radius: 6px;\n\n  .input-group > .form-floating:not(:first-child) > &.form-control,\n  .input-group > .form-floating:not(:first-child) > .form-select {\n    border-bottom-right-radius: 6px;\n    border-top-right-radius: 6px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operations';\nimport Form from 'react-bootstrap/Form';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { MdEmail } from 'react-icons/md';\nimport { RiLockPasswordFill } from 'react-icons/ri';\nimport { FaUser } from 'react-icons/fa';\nimport {\n  FormStyled,\n  FormGroupPassword,\n  ButtonPassword,\n  ButtonSignUp,\n  RegisterTitle,\n  FloatingLabelRegister,\n  InputPasswordRegister,\n} from './RegisterForm.styled';\nimport { GoEyeClosed, GoEye } from 'react-icons/go';\nimport { toast } from 'react-toastify';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [validated, setValidated] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [show, setShow] = useState(false);\n\n  const handleClick = () => setShow(!show);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (name === '' || email === '' || password === '') {\n      toast.error('Please, fill in all fields');\n      return;\n    }\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    if (password.length < 7) {\n      toast.error('Your password must be 7-20 characters long');\n      return;\n    }\n    setValidated(true);\n\n    dispatch(register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <FormStyled noValidate onSubmit={handleSubmit} validated={validated}>\n      <RegisterTitle>Registration form</RegisterTitle>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\n        <InputGroup>\n          <InputGroup.Text>\n            <FaUser size=\"20\" />\n          </InputGroup.Text>\n          <FloatingLabel controlId=\"floatingName\" label=\"Name\">\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter your name\"\n              onChange={handleChange}\n              name=\"name\"\n            />\n          </FloatingLabel>\n        </InputGroup>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n        <InputGroup>\n          <InputGroup.Text>\n            <MdEmail size=\"20\" />\n          </InputGroup.Text>\n          <FloatingLabel controlId=\"floatingInput\" label=\"Email address\">\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={handleChange}\n              name=\"email\"\n            />\n          </FloatingLabel>\n        </InputGroup>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n        <FormGroupPassword>\n          <InputGroup>\n            <InputGroup.Text>\n              <RiLockPasswordFill size=\"20\" />\n            </InputGroup.Text>\n            <FloatingLabelRegister\n              controlId=\"floatingPassword\"\n              label=\"Password\"\n            >\n              <InputPasswordRegister\n                required\n                type={show ? 'text' : 'password'}\n                placeholder=\"Enter password\"\n                onChange={handleChange}\n                name=\"password\"\n                minLength=\"7\"\n              />\n            </FloatingLabelRegister>\n\n            <ButtonPassword variant=\"light\" h=\"1.75rem\" onClick={handleClick}>\n              {show ? <GoEye size=\"20\" /> : <GoEyeClosed size=\"20\" />}\n            </ButtonPassword>\n          </InputGroup>\n        </FormGroupPassword>\n        <Form.Text id=\"passwordHelpBlock\" muted>\n          Your password must be 7-20 characters long, contain letters and\n          numbers, and must not contain spaces, special characters, or emoji.\n        </Form.Text>\n      </Form.Group>\n      <ButtonSignUp type=\"submit\">Sign up</ButtonSignUp>\n    </FormStyled>\n  );\n};\n","import styled from 'styled-components';\nimport img from '../../images/background-contacts.png';\n\nexport const SectionRegister = styled.section`\n  padding: 60px 0;\n  background-image: url(${img});\n  background-repeat: no-repeat;\n  background-position: top center;\n  background-size: cover;\n`;\n","import { RegisterForm } from \"components/RegisterForm/RegisterForm\";\nimport { SectionRegister } from \"./Register.styled\";\n\nconst Register = () => {\n  \n  return (\n    <SectionRegister>\n      <RegisterForm/>\n    </SectionRegister>\n  );\n};\n\nexport default Register;\n"],"names":["RegisterTitle","styled","FormStyled","Form","FormGroupPassword","ButtonPassword","Button","ButtonSignUp","FloatingLabelRegister","FloatingLabel","InputPasswordRegister","RegisterForm","dispatch","useDispatch","useState","validated","setValidated","name","setName","email","setEmail","password","setPassword","show","setShow","handleChange","target","value","noValidate","onSubmit","e","preventDefault","form","currentTarget","checkValidity","stopPropagation","length","toast","register","className","controlId","InputGroup","size","label","required","type","placeholder","onChange","minLength","variant","h","onClick","id","muted","SectionRegister","img"],"sourceRoot":""}