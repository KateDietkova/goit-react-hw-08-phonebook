{"version":3,"file":"static/js/566.5f9f410d.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/InputGroup.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login/Login.styled.js","pages/Login/Login.js"],"sourcesContent":["import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import styled from 'styled-components';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport const LoginTitle = styled.h1`\n  font-size: 30px;\n  text-align: center;\n  font-weight: 700;\n  margin-bottom: 15px;\n`;\n\nexport const FormStyled = styled(Form)`\n  margin: 0 auto;\n  padding: 10px;\n  width: 600px;\n  font-weight: 500;\n`;\n\nexport const FormGroupPassword = styled.div`\n  position: relative;\n`;\n\nexport const ButtonPassword = styled(Button)`\n  width: 40px;\n  position: absolute;\n  right: 40px;\n  bottom: 12px;\n  padding: 5px;\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ButtonLogin = styled(Button)`\n  width: 100px;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/auth-operations';\nimport Form from 'react-bootstrap/Form';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport {\n  FormStyled,\n  FormGroupPassword,\n  ButtonPassword,\n  ButtonLogin,\n  LoginTitle,\n} from './LoginForm.styled';\nimport { GoEyeClosed, GoEye } from 'react-icons/go';\nimport { toast } from 'react-toastify';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [validated, setValidated] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [show, setShow] = useState(false);\n\n  const handleClick = () => setShow(!show);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (email === '' || password === '') {\n      toast.error('Please, fill in all fields');\n      return;\n    }\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    setValidated(true);\n    dispatch(logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <FormStyled noValidate onSubmit={handleSubmit} validated={validated}>\n      <LoginTitle>Login</LoginTitle>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n        <FloatingLabel\n          controlId=\"floatingInput\"\n          label=\"Email address\"\n          className=\"mb-3\"\n        >\n          <InputGroup>\n            <InputGroup.Text>@</InputGroup.Text>\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={handleChange}\n              name=\"email\"\n            />\n          </InputGroup>\n        </FloatingLabel>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n        <FormGroupPassword>\n          <FloatingLabel controlId=\"floatingPassword\" label=\"Password\">\n            <Form.Control\n              required\n              type={show ? 'text' : 'password'}\n              placeholder=\"Enter password\"\n              onChange={handleChange}\n              name=\"password\"\n              minLength=\"8\"\n            />\n          </FloatingLabel>\n          <ButtonPassword variant=\"light\" h=\"1.75rem\" onClick={handleClick}>\n            {show ? <GoEye size=\"20\" /> : <GoEyeClosed size=\"20\" />}\n          </ButtonPassword>\n        </FormGroupPassword>\n        <Form.Text id=\"passwordHelpBlock\" muted>\n          Your password must be 8-20 characters long, contain letters and\n          numbers, and must not contain spaces, special characters, or emoji.\n        </Form.Text>\n      </Form.Group>\n      <ButtonLogin type=\"submit\">Log in</ButtonLogin>\n    </FormStyled>\n  );\n};\n","import styled from 'styled-components';\n\n\nexport const SectionLogin = styled.section`\n  background-color: #e6eff0;\n  padding: 60px 0;\n`;\n\n\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { SectionLogin } from './Login.styled';\n\nconst Login = () => {\n  return (\n    <SectionLogin>\n      <LoginForm />\n    </SectionLogin>\n  );\n};\n\nexport default Login;\n"],"names":["context","React","displayName","InputGroupText","createWithBsPrefix","Component","InputGroup","ref","bsPrefix","size","hasValidation","className","as","props","useBootstrapPrefix","contextValue","useMemo","_jsx","InputGroupContext","Provider","value","children","classNames","Object","assign","Text","Radio","FormCheckInput","type","Checkbox","LoginTitle","styled","FormStyled","Form","FormGroupPassword","ButtonPassword","Button","ButtonLogin","LoginForm","dispatch","useDispatch","useState","validated","setValidated","email","setEmail","password","setPassword","show","setShow","handleChange","target","name","noValidate","onSubmit","e","preventDefault","form","currentTarget","checkValidity","stopPropagation","logIn","toast","controlId","FloatingLabel","label","required","placeholder","onChange","minLength","variant","h","onClick","id","muted","SectionLogin"],"sourceRoot":""}