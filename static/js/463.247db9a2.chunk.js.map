{"version":3,"file":"static/js/463.247db9a2.chunk.js","mappings":"4RAIaA,EAAcC,EAAAA,GAAAA,EAAH,wCAIXC,GAAsBD,EAAAA,EAAAA,IAAOE,EAAAA,EAAPF,CAAH,kNAanBG,GAAmBH,EAAAA,EAAAA,IAAOE,EAAAA,EAAPF,CAAH,oO,mBCnBhBI,EAAe,SAAC,GAOtB,IANLC,EAMI,EANJA,MACWC,EAKP,EALJC,UACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,GACAC,EAEI,EAFJA,SACAC,EACI,EADJA,WAEA,OACE,iCACE,SAACC,EAAA,SAAD,CAAcC,aAAW,EAAzB,UACE,SAACD,EAAA,QAAD,UAAcP,OAEhB,SAACO,EAAA,OAAD,WACE,SAACN,EAAD,CACEE,QAASA,EACTC,GAAIA,EACJC,SAAUA,EACVC,WAAYA,QAKrB,E,UCrBYG,GAAad,EAAAA,EAAAA,IAAOe,EAAAA,EAAPf,CAAH,kFAMVgB,GAAahB,EAAAA,EAAAA,IAAOE,EAAAA,EAAPF,CAAH,gG,UCRViB,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAV,EACtBC,EAAoB,SAAAF,GAAK,OAAIA,EAAMG,MAAV,EAEzBC,GAAwBC,EAAAA,EAAAA,IACnC,CAACN,EAAgBG,IACjB,WAAYI,GAAiB,IAA1BC,EAAyB,EAAzBA,MACKC,EAAmBF,EAAYG,cAIrC,OAHuBF,EAAMJ,QAAO,qBAAGO,KAChCD,cAAcE,SAASH,EADM,GAIrC,I,oBCHUI,EAAkB,SAAC,GAA2C,IAAzCtB,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAC/Cc,GAAUM,EAAAA,EAAAA,IAAYd,GAAtBQ,MACR,GAAkCO,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwBF,EAAAA,EAAAA,UAAStB,GAAjC,eAAOkB,EAAP,KAAaO,EAAb,KACA,GAA4BH,EAAAA,EAAAA,UAASrB,GAArC,eAAOyB,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUb,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,MACtC,OAAQd,GACN,IAAK,OACH,OAAOO,EAAQO,GACjB,IAAK,SACH,OAAOL,EAAUK,GACnB,QACE,OAEL,EAmCD,OACE,UAAC5B,EAAD,CAAY6B,YAAU,EAACC,SAlCJ,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACXC,GAAS,EAEA,KAATrB,GAA0B,KAAXQ,IAKU,IAAzBW,EAAKG,kBACPL,EAAEC,iBACFD,EAAEM,mBAEJjB,GAAa,GACTT,GAASA,EAAM2B,OAAS,GAC1B3B,EAAM4B,SAAQ,YAA4B,IAAnBC,EAAkB,EAAxB1B,KACXA,EAAKD,gBAAkB2B,EAAY3B,gBACrC4B,EAAAA,GAAAA,MAAA,UAAe3B,EAAf,4BACAqB,GAAS,EAEZ,IAGEA,IACHX,GAASkB,EAAAA,EAAAA,IAAc,CAAE/C,GAAAA,EAAImB,KAAAA,EAAMQ,OAAAA,KACnC5B,IACA2B,EAAQ,IACRE,EAAU,IACVH,GAAa,KAvBbqB,EAAAA,GAAAA,MAAY,6BAyBf,EAGgDtB,UAAWA,EAA1D,WACE,SAAClB,EAAA,QAAD,CAAY0C,UAAU,OAAOC,UAAU,gBAAvC,UACE,SAACC,EAAA,EAAD,CAAeD,UAAU,eAAeE,MAAM,OAAOH,UAAU,OAA/D,UACE,SAAC1C,EAAA,UAAD,CACE8C,UAAQ,EACRC,KAAK,OACLC,YAAY,kBACZC,SAAUxB,EACVZ,KAAK,OACLc,MAAOd,EACPqC,QAAQ,gIAId,SAAClD,EAAA,QAAD,CAAY0C,UAAU,OAAOC,UAAU,kBAAvC,UACE,SAACC,EAAA,EAAD,CACED,UAAU,gBACVE,MAAM,SACNH,UAAU,OAHZ,UAKE,SAAC1C,EAAA,UAAD,CACE8C,UAAQ,EACRC,KAAK,MACLC,YAAY,eACZC,SAAUxB,EACVZ,KAAK,SACLc,MAAON,SAIb,SAACpB,EAAD,CAAY8C,KAAK,SAAjB,4BAGL,EChFYI,EAAc,SAAC,GAAuC,IAAD,IAApCC,QAAW1D,EAAyB,EAAzBA,GAAImB,EAAqB,EAArBA,KAAMQ,EAAe,EAAfA,OAC3CE,GAAWC,EAAAA,EAAAA,MAEhB,GAAwBP,EAAAA,EAAAA,WAAS,GAAjC,eAAOoC,EAAP,KAAaC,EAAb,KAEKC,EAAc,kBAAMD,GAAQ,EAAd,EAIpB,OACE,iCACE,UAACtE,EAAD,WACG6B,EADH,KACWQ,MAEX,4BACE,SAACjC,EAAD,CAAkB2D,KAAK,SAASS,QAAS,kBATtBF,GAAQ,EASc,EAAzC,mBAGA,SAACpE,EAAD,CACE6D,KAAK,SACLS,QAAS,kBAAMjC,GAASkC,EAAAA,EAAAA,IAAc/D,GAA7B,EAFX,uBAOD2D,IACC,SAACxD,EAAA,EAAD,CAAOwD,KAAMA,EAAMK,OAAQH,EAA3B,UACE,SAAClE,EAAD,CACEC,MAAO,eACPE,UAAWuB,EACXtB,QAAS8D,EACT7D,GAAIA,EACJC,SAAUkB,EACVjB,WAAYyB,EACZsC,QAAQ,QAMnB,ECrDYC,EAAoB3E,EAAAA,GAAAA,GAAH,+IASjB4E,EAAwB5E,EAAAA,GAAAA,GAAH,mQCNrB6E,EAAc,WACzB,IAAM1D,GAAWY,EAAAA,EAAAA,IAAYT,GAE7B,OACE,SAACqD,EAAD,UACGxD,EAAS2D,KAAI,SAAAX,GAAO,OACnB,SAACS,EAAD,WACE,SAACV,EAAD,CAAaC,QAASA,KADIA,EAAQ1D,GADjB,KAO1B,E,oBCZYsE,GAAsB/E,EAAAA,EAAAA,IAAO2D,EAAAA,EAAP3D,CAAH,6CAInBgF,GAAchF,EAAAA,EAAAA,IAAOe,EAAAA,EAAAA,QAAPf,CAAH,yCAIXiF,EAAgBjF,EAAAA,GAAAA,IAAH,8GAObkF,GAAmBlF,EAAAA,EAAAA,IAAOmF,EAAAA,EAAPnF,CAAH,uC,UCPhBoF,EAAS,WACpB,IAAM9C,GAAWC,EAAAA,EAAAA,MACXf,GAAcO,EAAAA,EAAAA,IAAYX,GAChC,OACE,SAAC6D,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAA,OAAD,WACE,SAAC,MAAD,CAAUE,KAAK,UAEjB,SAACN,EAAD,CACErB,UAAU,gBACVE,MAAM,uBAFR,UAIE,SAACoB,EAAD,CACElB,KAAK,OACLC,YAAY,cACZrB,MAAOlB,EACPwC,SAAU,SAAAnB,GAAC,OAAIP,GAASgD,EAAAA,EAAAA,GAAezC,EAAEG,cAAcN,OAA5C,UAMtB,E,qBCjCY6C,GAAS,WACpB,OACE,SAACC,GAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,UACE,SAAC,KAAD,CACEC,OAAQ,IACRC,MAAO,IACPC,OAAQ,EACRC,MAAM,UACNC,UAAU,wBACVC,SAAS,KAIhB,E,WCbYC,GAAkBjG,EAAAA,GAAAA,QAAH,gMAGFkG,IAMbC,GAAsBnG,EAAAA,GAAAA,IAAH,4H,WCRnBc,IAAad,EAAAA,EAAAA,IAAOe,EAAAA,EAAPf,CAAH,kFAOVoG,IAAYpG,EAAAA,EAAAA,IAAOE,EAAAA,EAAPF,CAAH,gGCDTqG,GAAc,SAAC,GAAiB,IAAf7F,EAAc,EAAdA,QACpBiB,GAAUM,EAAAA,EAAAA,IAAYd,GAAtBQ,MACR,GAAkCO,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOJ,EAAP,KAAaO,EAAb,KACA,GAA4BH,EAAAA,EAAAA,UAAS,IAArC,eAAOI,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUb,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,MACtC,OAAQd,GACN,IAAK,OACH,OAAOO,EAAQO,GACjB,IAAK,SACH,OAAOL,EAAUK,GACnB,QACE,OAEL,EAmCD,OACE,UAAC,GAAD,CAAYC,YAAU,EAACC,SAlCJ,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACXC,GAAS,EAEA,KAATrB,GAA0B,KAAXQ,IAKU,IAAzBW,EAAKG,kBACPL,EAAEC,iBACFD,EAAEM,mBAEJjB,GAAa,GACTT,GAASA,EAAM2B,OAAS,GAC1B3B,EAAM4B,SAAQ,YAA4B,IAAnBC,EAAkB,EAAxB1B,KACXA,EAAKD,gBAAkB2B,EAAY3B,gBACrC4B,EAAAA,GAAAA,MAAA,UAAe3B,EAAf,4BACAqB,GAAS,EAEZ,IAGEA,IACHX,GAASgE,EAAAA,EAAAA,IAAW,CAAE1E,KAAAA,EAAMQ,OAAAA,KAC5B5B,IACA2B,EAAQ,IACRE,EAAU,IACVH,GAAa,KAvBbqB,EAAAA,GAAAA,MAAY,6BAyBf,EAGgDtB,UAAWA,EAA1D,WACE,SAAClB,EAAA,QAAD,CAAY0C,UAAU,OAAOC,UAAU,gBAAvC,UACE,SAACC,EAAA,EAAD,CAAeD,UAAU,eAAeE,MAAM,OAAOH,UAAU,OAA/D,UACE,SAAC1C,EAAA,UAAD,CACE8C,UAAQ,EACRC,KAAK,OACLC,YAAY,kBACZC,SAAUxB,EACVZ,KAAK,OACLc,MAAOd,EACPqC,QAAQ,gIAId,SAAClD,EAAA,QAAD,CAAY0C,UAAU,OAAOC,UAAU,kBAAvC,UACE,SAACC,EAAA,EAAD,CACED,UAAU,gBACVE,MAAM,SACNH,UAAU,OAHZ,UAKE,SAAC1C,EAAA,UAAD,CACE8C,UAAQ,EACRC,KAAK,MACLC,YAAY,eACZC,SAAUxB,EACVZ,KAAK,SACLc,MAAON,SAIb,SAACgE,GAAD,CAAWtC,KAAK,SAAhB,2BAGL,ECzCD,GAxCiB,WACf,OAAoC/B,EAAAA,EAAAA,IAAYd,GAAxCQ,EAAR,EAAQA,MAAO8E,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,MACpBlE,GAAWC,EAAAA,EAAAA,MACjB,GAAwBP,EAAAA,EAAAA,WAAS,GAAjC,eAAOoC,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,EAAd,EAOpB,OAJAoC,EAAAA,EAAAA,YAAU,WACRnE,GAASoE,EAAAA,EAAAA,MACV,GAAE,CAACpE,KAGF,UAAC2D,GAAD,YACE,UAACE,GAAD,YACE,sCACA,SAACjG,EAAA,EAAD,CAAQ4D,KAAK,SAASS,QAVT,kBAAMF,GAAQ,EAAd,EAUb,UACE,SAAC,OAAD,CAAegB,KAAK,aAGxB,SAACD,EAAD,IACCmB,IAAa,SAAChB,GAAD,IACbiB,IAAS,6EACT/E,EAAM2B,OAAS,IAAMmD,IAAa,SAAC1B,EAAD,KACjC0B,GAA8B,IAAjB9E,EAAM2B,SACnB,0DAEDgB,IACC,SAACxD,EAAA,EAAD,CAAOwD,KAAMA,EAAMK,OAAQH,EAA3B,UACE,SAAClE,EAAD,CACEC,MAAO,cACPE,UAAW8F,GACX7F,QAAS8D,QAMpB,C","sources":["components/ContactItem/ContactItem.styled.js","components/Modal/Modal.js","components/ContactFormEdit/ContactFormEdit.styled.js","redux/contacts/contacts-selectors.js","components/ContactFormEdit/ContactFormEdit.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Loader/Loader.jsx","pages/Contacts/Contacts.styled.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\n\n\nexport const ContactInfo = styled.p`\n    margin: 0;\n`\n\nexport const ButtonContactStyled = styled(Button)`\n  display: inline-block;\n  padding: 10px 20px;\n  border: none;\n  text-align: center;\n  cursor: pointer;\n  background-color: #07bad2;\n  border-radius: 5px;\n  min-width: 80px;\n\n\n`;\n\nexport const ButtonEditStyled = styled(Button)`\n  display: inline-block;\n  padding: 10px 20px;\n  border: none;\n  text-align: center;\n  cursor: pointer;\n  background-color: #07bad2;\n  border-radius: 5px;\n  margin-right: 8px;\n  min-width: 80px;\n`;","import Modal from 'react-bootstrap/Modal';\n\nexport const ModalContact = ({\n  title,\n  component: Component,\n  onClose,\n  id,\n  userName,\n  userNumber,\n}) => {\n  return (\n    <>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Component\n          onClose={onClose}\n          id={id}\n          userName={userName}\n          userNumber={userNumber}\n        />\n      </Modal.Body>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport const FormStyled = styled(Form)`\n  margin: 0 auto;\n  padding: 10px;\n  font-weight: 500;\n`;\n\nexport const ButtonEdit = styled(Button)`\n  display: block;\n  width: 120px;\n  padding: 8px;\n  margin: 0 auto;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectFilterValue = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  ({ items }, filterValue) => {\n    const normalizedFilter = filterValue.toLowerCase();\n    const filterContacts = items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n    return filterContacts;\n  }\n);\n\n","import { FormStyled, ButtonEdit } from './ContactFormEdit.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateContact } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport Form from 'react-bootstrap/Form';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\n\nexport const ContactFormEdit = ({ onClose, id, userName, userNumber }) => {\n  const { items } = useSelector(selectContacts);\n  const [validated, setValidated] = useState(false);\n  const [name, setName] = useState(userName);\n  const [number, setNumber] = useState(userNumber);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    let isName = false;\n\n    if (name === '' || number === '') {\n      toast.error('Please, fill in all fields');\n      return;\n    }\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    setValidated(true);\n    if (items && items.length > 0) {\n      items.forEach(({ name: existedName }) => {\n        if (name.toLowerCase() === existedName.toLowerCase()) {\n          toast.error(`${name} is already in contacts`);\n          isName = true;\n        }\n      });\n    }\n\n    if (!isName) {\n      dispatch(updateContact({ id, name, number }));\n      onClose();\n      setName('');\n      setNumber('');\n      setValidated(false);\n    }\n  };\n\n  return (\n    <FormStyled noValidate onSubmit={handleSubmit} validated={validated}>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\n        <FloatingLabel controlId=\"floatingName\" label=\"Name\" className=\"mb-3\">\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            onChange={handleChange}\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          />\n        </FloatingLabel>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupNumber\">\n        <FloatingLabel\n          controlId=\"floatingInput\"\n          label=\"Number\"\n          className=\"mb-3\"\n        >\n          <Form.Control\n            required\n            type=\"tel\"\n            placeholder=\"Enter number\"\n            onChange={handleChange}\n            name=\"number\"\n            value={number}\n          />\n        </FloatingLabel>\n      </Form.Group>\n      <ButtonEdit type=\"submit\">Save changes</ButtonEdit>\n    </FormStyled>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport {\n  ButtonContactStyled,\n  ContactInfo,\n  ButtonEditStyled,\n} from './ContactItem.styled';\nimport { ModalContact } from 'components/Modal/Modal';\nimport Modal from 'react-bootstrap/Modal';\nimport { ContactFormEdit } from 'components/ContactFormEdit/ContactFormEdit';\n\n\n\nexport const ContactItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n   const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  return (\n    <>\n      <ContactInfo>\n        {name}: {number}\n      </ContactInfo>\n      <div>\n        <ButtonEditStyled type=\"button\" onClick={() => handleShow()}>\n          Edit\n        </ButtonEditStyled>\n        <ButtonContactStyled\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          Delete\n        </ButtonContactStyled>\n      </div>\n      {show && (\n        <Modal show={show} onHide={handleClose}>\n          <ModalContact\n            title={'Edit contact'}\n            component={ContactFormEdit}\n            onClose={handleClose}\n            id={id}\n            userName={name}\n            userNumber={number}\n            isEdit={true}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const ContactListStyled = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n`;\n\nexport const ContactListItemStyled = styled.li`\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 15px;\n  width: 400px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  background-color: rgba(255, 255, 255, 0.5);\n`;\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { ContactListStyled, ContactListItemStyled } from './ContactList.styled';\nimport { selectVisibleContacts } from 'redux/contacts/contacts-selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactListStyled>\n      {contacts.map(contact => (\n        <ContactListItemStyled key={contact.id}>\n          <ContactItem contact={contact} />\n        </ContactListItemStyled>\n      ))}\n    </ContactListStyled>\n  );\n};\n\n//\n","import styled from 'styled-components';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nexport const FloatingLabelStyled = styled(FloatingLabel)`\n  margin-bottom: 0;\n`;\n\nexport const FilterInput = styled(Form.Control)`\n  width: 600px;\n`;\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  margin-bottom: 30px;\n`;\n\nexport const InputGroupStyled = styled(InputGroup)`\n  width: 55%;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/itemsSlice/filterSlice.js';\nimport { selectFilterValue } from 'redux/contacts/contacts-selectors.js';\nimport {\n  FloatingLabelStyled,\n  FilterInput,\n  FilterWrapper,\n  InputGroupStyled,\n} from './Filter.styled.js';\n\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilterValue);\n  return (\n    <FilterWrapper>\n      <InputGroupStyled>\n        <InputGroup.Text>\n          <BsSearch size=\"20\" />\n        </InputGroup.Text>\n        <FloatingLabelStyled\n          controlId=\"floatingInput\"\n          label=\"Find contact by name\"\n        >\n          <FilterInput\n            type=\"text\"\n            placeholder=\"Enter email\"\n            value={filterValue}\n            onChange={e => dispatch(filterContacts(e.currentTarget.value))}\n          />\n        </FloatingLabelStyled>\n      </InputGroupStyled>\n    </FilterWrapper>\n  );\n};\n","import { BallTriangle } from 'react-loader-spinner';\nimport { Box } from 'components/Box/Box';\n\nexport const Loader = () => {\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <BallTriangle\n        height={100}\n        width={100}\n        radius={5}\n        color=\"#07bad2\"\n        ariaLabel=\"ball-triangle-loading\"\n        visible={true}\n      />\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport img from '../../images/background-contacts.png';\n\nexport const SectionContacts = styled.section`\n  padding: 30px 0;\n  min-height: 700px;\n  background-image: url(${img});\n  background-repeat: no-repeat;\n  background-position: top center;\n  background-size: cover;\n`;\n\nexport const ButtonWTitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 30px;\n  padding: 10px 30px;\n`;\n","import styled from 'styled-components';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport const FormStyled = styled(Form)`\n  margin: 0 auto;\n  padding: 10px;\n  font-weight: 500;\n`;\n\n\nexport const ButtonAdd = styled(Button)`\n  display: block;\n  width: 120px;\n  padding: 8px;\n  margin: 0 auto;\n`;\n","import { FormStyled, ButtonAdd } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport Form from 'react-bootstrap/Form';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\n\nexport const ContactForm = ({ onClose }) => {\n  const { items } = useSelector(selectContacts);\n  const [validated, setValidated] = useState(false);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    let isName = false;\n\n    if (name === '' || number === '') {\n      toast.error('Please, fill in all fields');\n      return;\n    }\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    setValidated(true);\n    if (items && items.length > 0) {\n      items.forEach(({ name: existedName }) => {\n        if (name.toLowerCase() === existedName.toLowerCase()) {\n          toast.error(`${name} is already in contacts`);\n          isName = true;\n        }\n      });\n    }\n\n    if (!isName) {\n      dispatch(addContact({ name, number }));\n      onClose();\n      setName('');\n      setNumber('');\n      setValidated(false);\n    }\n  };\n\n  return (\n    <FormStyled noValidate onSubmit={handleSubmit} validated={validated}>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\n        <FloatingLabel controlId=\"floatingName\" label=\"Name\" className=\"mb-3\">\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            onChange={handleChange}\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          />\n        </FloatingLabel>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupNumber\">\n        <FloatingLabel\n          controlId=\"floatingInput\"\n          label=\"Number\"\n          className=\"mb-3\"\n        >\n          <Form.Control\n            required\n            type=\"tel\"\n            placeholder=\"Enter number\"\n            onChange={handleChange}\n            name=\"number\"\n            value={number}\n          />\n        </FloatingLabel>\n      </Form.Group>\n      <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n    </FormStyled>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { useEffect, useState } from 'react';\nimport { SectionContacts, ButtonWTitleWrapper } from './Contacts.styled';\nimport { IoMdPersonAdd } from 'react-icons/io';\nimport { Button } from 'react-bootstrap';\nimport { ModalContact } from 'components/Modal/Modal';\nimport Modal from 'react-bootstrap/Modal';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nconst Contacts = () => {\n  const { items, isLoading, error } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <SectionContacts>\n      <ButtonWTitleWrapper>\n        <h2>Contacts</h2>\n        <Button type=\"button\" onClick={handleShow}>\n          <IoMdPersonAdd size=\"32\" />\n        </Button>\n      </ButtonWTitleWrapper>\n      <Filter />\n      {isLoading && <Loader />}\n      {error && <div>Sorry, something went wrong :( Please try again</div>}\n      {items.length > 0 && !isLoading && <ContactList />}\n      {!isLoading && items.length === 0 && (\n        <div>You haven't any contacts yet</div>\n      )}\n      {show && (\n        <Modal show={show} onHide={handleClose}>\n          <ModalContact\n            title={'Add contact'}\n            component={ContactForm}\n            onClose={handleClose}\n          />\n        </Modal>\n      )}\n    </SectionContacts>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactInfo","styled","ButtonContactStyled","Button","ButtonEditStyled","ModalContact","title","Component","component","onClose","id","userName","userNumber","Modal","closeButton","FormStyled","Form","ButtonEdit","selectContacts","state","contacts","selectFilterValue","filter","selectVisibleContacts","createSelector","filterValue","items","normalizedFilter","toLowerCase","name","includes","ContactFormEdit","useSelector","useState","validated","setValidated","setName","number","setNumber","dispatch","useDispatch","handleChange","target","value","noValidate","onSubmit","e","preventDefault","form","currentTarget","isName","checkValidity","stopPropagation","length","forEach","existedName","toast","updateContact","className","controlId","FloatingLabel","label","required","type","placeholder","onChange","pattern","ContactItem","contact","show","setShow","handleClose","onClick","deleteContact","onHide","isEdit","ContactListStyled","ContactListItemStyled","ContactList","map","FloatingLabelStyled","FilterInput","FilterWrapper","InputGroupStyled","InputGroup","Filter","size","filterContacts","Loader","Box","display","justifyContent","height","width","radius","color","ariaLabel","visible","SectionContacts","img","ButtonWTitleWrapper","ButtonAdd","ContactForm","addContact","isLoading","error","useEffect","fetchContacts"],"sourceRoot":""}