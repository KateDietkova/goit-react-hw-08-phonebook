{"version":3,"file":"static/js/52.dfce22b7.chunk.js","mappings":"4RAIaA,EAAaC,EAAAA,GAAAA,GAAH,gHAOVC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,EAAPF,CAAH,mGAOVG,EAAoBH,EAAAA,GAAAA,IAAH,+CAIjBI,GAAiBJ,EAAAA,EAAAA,IAAOK,EAAAA,EAAPL,CAAH,yNAYdM,GAAcN,EAAAA,EAAAA,IAAOK,EAAAA,EAAPL,CAAH,yC,6BCnBXO,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAwBN,EAAAA,EAAAA,WAAS,GAAjC,eAAOO,EAAP,KAAaC,EAAb,KAIMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOP,EAASQ,GAClB,IAAK,WACH,OAAON,EAAYM,GACrB,QACE,OAEL,EAmBD,OACE,UAACrB,EAAD,CAAYsB,YAAU,EAACC,SAlBJ,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACD,KAAVf,GAA6B,KAAbE,IAIS,IAAzBY,EAAKE,kBACPJ,EAAEC,iBACFD,EAAEK,mBAGJlB,GAAa,GACbJ,GAASuB,EAAAA,EAAAA,IAAM,CAAElB,MAAAA,EAAOE,SAAAA,KACxBD,EAAS,IACTE,EAAY,KAXVgB,EAAAA,GAAAA,MAAY,6BAYf,EAEgDrB,UAAWA,EAA1D,WACE,SAACZ,EAAD,qBACA,SAACG,EAAA,QAAD,CAAY+B,UAAU,OAAOC,UAAU,iBAAvC,UACE,SAACC,EAAA,EAAD,CACED,UAAU,gBACVE,MAAM,gBACNH,UAAU,OAHZ,UAKE,SAAC/B,EAAA,UAAD,CACEmC,UAAQ,EACRC,KAAK,QACLC,YAAY,cACZC,SAAUrB,EACVE,KAAK,eAIX,UAACnB,EAAA,QAAD,CAAY+B,UAAU,OAAOC,UAAU,oBAAvC,WACE,UAAC/B,EAAD,YACE,SAACgC,EAAA,EAAD,CAAeD,UAAU,mBAAmBE,MAAM,WAAlD,UACE,SAAClC,EAAA,UAAD,CACEmC,UAAQ,EACRC,KAAMrB,EAAO,OAAS,WACtBsB,YAAY,iBACZC,SAAUrB,EACVE,KAAK,WACLoB,UAAU,SAGd,SAACrC,EAAD,CAAgBsC,QAAQ,QAAQC,EAAE,UAAUC,QA5DhC,kBAAM1B,GAASD,EAAf,EA4DZ,SACGA,GAAO,SAAC,MAAD,CAAO4B,KAAK,QAAU,SAAC,MAAD,CAAaA,KAAK,aAGpD,SAAC3C,EAAA,OAAD,CAAW4C,GAAG,oBAAoBC,OAAK,EAAvC,qJAKF,SAACzC,EAAD,CAAagC,KAAK,SAAlB,sBAGL,EC3FYU,EAAehD,EAAAA,GAAAA,QAAH,0ECQzB,EARc,WACZ,OACE,SAACgD,EAAD,WACE,SAACzC,EAAD,KAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login/Login.styled.js","pages/Login/Login.js"],"sourcesContent":["import styled from 'styled-components';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport const LoginTitle = styled.h1`\n  font-size: 30px;\n  text-align: center;\n  font-weight: 700;\n  margin-bottom: 15px;\n`;\n\nexport const FormStyled = styled(Form)`\n  margin: 0 auto;\n  padding: 10px;\n  width: 600px;\n  font-weight: 500;\n`;\n\nexport const FormGroupPassword = styled.div`\n  position: relative;\n`;\n\nexport const ButtonPassword = styled(Button)`\n  width: 40px;\n  position: absolute;\n  right: 40px;\n  bottom: 12px;\n  padding: 5px;\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ButtonLogin = styled(Button)`\n  width: 100px;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/auth-operations';\nimport Form from 'react-bootstrap/Form';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport {\n  FormStyled,\n  FormGroupPassword,\n  ButtonPassword,\n  ButtonLogin,\n  LoginTitle,\n} from './LoginForm.styled';\nimport { GoEyeClosed, GoEye } from 'react-icons/go';\nimport { toast } from 'react-toastify';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [validated, setValidated] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [show, setShow] = useState(false);\n\n  const handleClick = () => setShow(!show);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    if (email === '' || password === '') {\n      toast.error('Please, fill in all fields');\n      return;\n    }\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    setValidated(true);\n    dispatch(logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <FormStyled noValidate onSubmit={handleSubmit} validated={validated}>\n      <LoginTitle>Login</LoginTitle>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n        <FloatingLabel\n          controlId=\"floatingInput\"\n          label=\"Email address\"\n          className=\"mb-3\"\n        >\n          <Form.Control\n            required\n            type=\"email\"\n            placeholder=\"Enter email\"\n            onChange={handleChange}\n            name=\"email\"\n          />\n        </FloatingLabel>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formGroupPassword\">\n        <FormGroupPassword>\n          <FloatingLabel controlId=\"floatingPassword\" label=\"Password\">\n            <Form.Control\n              required\n              type={show ? 'text' : 'password'}\n              placeholder=\"Enter password\"\n              onChange={handleChange}\n              name=\"password\"\n              minLength=\"8\"\n            />\n          </FloatingLabel>\n          <ButtonPassword variant=\"light\" h=\"1.75rem\" onClick={handleClick}>\n            {show ? <GoEye size=\"20\" /> : <GoEyeClosed size=\"20\" />}\n          </ButtonPassword>\n        </FormGroupPassword>\n        <Form.Text id=\"passwordHelpBlock\" muted>\n          Your password must be 8-20 characters long, contain letters and\n          numbers, and must not contain spaces, special characters, or emoji.\n        </Form.Text>\n      </Form.Group>\n      <ButtonLogin type=\"submit\">Log in</ButtonLogin>\n    </FormStyled>\n  );\n};\n","import styled from 'styled-components';\n\n\nexport const SectionLogin = styled.section`\n  background-color: #e6eff0;\n  padding: 60px 0;\n`;\n\n\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { SectionLogin } from './Login.styled';\n\nconst Login = () => {\n  return (\n    <SectionLogin>\n      <LoginForm />\n    </SectionLogin>\n  );\n};\n\nexport default Login;\n"],"names":["LoginTitle","styled","FormStyled","Form","FormGroupPassword","ButtonPassword","Button","ButtonLogin","LoginForm","dispatch","useDispatch","useState","validated","setValidated","email","setEmail","password","setPassword","show","setShow","handleChange","target","name","value","noValidate","onSubmit","e","preventDefault","form","currentTarget","checkValidity","stopPropagation","logIn","toast","className","controlId","FloatingLabel","label","required","type","placeholder","onChange","minLength","variant","h","onClick","size","id","muted","SectionLogin"],"sourceRoot":""}